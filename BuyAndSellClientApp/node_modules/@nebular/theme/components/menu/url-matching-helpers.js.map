{"version":3,"file":"url-matching-helpers.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/menu/url-matching-helpers.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,MAAM,UAAU,cAAc,CAAC,IAAI,EAAE,IAAI;IACvC,IAAM,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC5C,OAAO,IAAI,KAAK,YAAY,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAI,EAAE,IAAI;IACzC,IAAM,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAM,qBAAqB,GAAG,OAAO,CAAC;IACtC,OAAO,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC;QAClC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAG;IAClC,OAAO,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,GAAW;IAC9C,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnC,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACnC,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,IAAY,EAAE,QAAgB;IAC5D,OAAO,oBAAoB,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAY,EAAE,QAAgB;IAC9D,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACvD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport function isUrlPathEqual(path, link) {\n  const locationPath = getPathPartOfUrl(path);\n  return link === locationPath;\n}\n\nexport function isUrlPathContain(path, link) {\n  const locationPath = getPathPartOfUrl(path);\n  const endOfUrlSegmentRegExp = /\\/|^$/;\n  return locationPath.startsWith(link) &&\n    locationPath.slice(link.length).charAt(0).search(endOfUrlSegmentRegExp) !== -1;\n}\n\nexport function getPathPartOfUrl(url): string {\n  return url.match(/.*?(?=[?;#]|$)/)[0];\n}\n\nexport function getFragmentPartOfUrl(url: string): string {\n  const matched = url.match(/#(.+)/);\n  return matched ? matched[1] : '';\n}\n\nexport function isFragmentEqual(path: string, fragment: string): boolean {\n  return getFragmentPartOfUrl(path) === fragment;\n}\n\nexport function isFragmentContain(path: string, fragment: string): boolean {\n  return getFragmentPartOfUrl(path).includes(fragment);\n}\n"]}