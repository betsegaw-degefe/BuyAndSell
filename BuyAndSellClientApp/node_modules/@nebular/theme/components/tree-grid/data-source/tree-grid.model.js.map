{"version":3,"file":"tree-grid.model.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tree-grid/data-source/tree-grid.model.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,MAAM,CAAC,IAAM,oBAAoB,GAAW,CAAC,CAAC;AAY9C;;GAEG;AACH;IACE;IACE;;OAEG;IACa,IAAO,EAChB,QAAqD;IAC5D;;OAEG;IACI,QAAiB,EACR,KAAa;QANb,SAAI,GAAJ,IAAI,CAAG;QAChB,aAAQ,GAAR,QAAQ,CAA6C;QAIrD,aAAQ,GAAR,QAAQ,CAAS;QACR,UAAK,GAAL,KAAK,CAAQ;IAC5B,CAAC;IAEJ;;OAEG;IACH,gDAAW,GAAX;QACE,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACnD,CAAC;IACH,iCAAC;AAAD,CAAC,AApBD,IAoBC","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const NB_DEFAULT_ROW_LEVEL: number = 0;\n\nexport type NbDataGetter<N, T> = (N) => T;\nexport type NbChildrenGetter<N, T> = (N) => (T[] | undefined);\nexport type NbExpandedGetter<N> = (N) => boolean;\n\nexport interface NbGetters<N, T> {\n  dataGetter?: NbDataGetter<N, T>;\n  childrenGetter?: NbChildrenGetter<N, T>;\n  expandedGetter?: NbExpandedGetter<N>;\n}\n\n/**\n * Implicit context of cells and rows\n */\nexport class NbTreeGridPresentationNode<T> {\n  constructor(\n    /**\n     * Data object associated with row\n     */\n    public readonly data: T,\n    public children: NbTreeGridPresentationNode<T>[] | undefined,\n    /**\n     * Row expand state\n     */\n    public expanded: boolean,\n    public readonly level: number,\n  ) {}\n\n  /**\n   * True if row has child rows\n   */\n  hasChildren(): boolean {\n    return !!this.children && !!this.children.length;\n  }\n}\n"]}