{"version":3,"file":"tree-grid-data.service.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/tree-grid/data-source/tree-grid-data.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;;;;;;;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAa,oBAAoB,EAAE,0BAA0B,EAAE,MAAM,mBAAmB,CAAC;AAGhG;IADA;QAGU,mBAAc,GAAsB;YAC1C,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAT,CAAS;YAC7B,cAAc,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,SAAS,EAAvB,CAAuB;YAC5C,cAAc,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAZ,CAAY;SAClC,CAAC;IA+CJ,CAAC;IA7CC,mDAAmB,GAAnB,UACE,KAAU,EACV,aAA+B,EAC/B,KAAoC;QAApC,sBAAA,EAAA,4BAAoC;QAEpC,IAAM,OAAO,gBAAyB,IAAI,CAAC,cAAc,EAAK,aAAa,CAAE,CAAC;QAE9E,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC;IAEO,wCAAQ,GAAhB,UAAoB,KAAU,EAAE,OAAwB,EAAE,KAAa;QAAvE,iBAYC;QAXS,IAAA,+BAAU,EAAE,uCAAc,EAAE,uCAAc,CAAa;QAE/D,OAAO,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;YACnB,IAAM,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,QAAyC,CAAC;YAC9C,IAAI,aAAa,EAAE;gBACjB,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;aACxE;YAED,OAAO,IAAI,0BAA0B,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAsC;QAAtD,iBAUC;QATC,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,GAAoC,EAAE,IAAmC;YAC5F,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEf,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACvC,GAAG,CAAC,IAAI,OAAR,GAAG,EAAS,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;aAClD;YAED,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,oCAAI,GAAJ,UAAK,KAAsC;QAA3C,iBAQC;QAPC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAmC;YACnD,IAAI,QAAyC,CAAC;YAC9C,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACtB,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrC;YACD,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACL,CAAC;IApDU,qBAAqB;QADjC,UAAU,EAAE;OACA,qBAAqB,CAqDjC;IAAD,4BAAC;CAAA,AArDD,IAqDC;SArDY,qBAAqB","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NbGetters, NB_DEFAULT_ROW_LEVEL, NbTreeGridPresentationNode } from './tree-grid.model';\n\n@Injectable()\nexport class NbTreeGridDataService<T> {\n\n  private defaultGetters: NbGetters<any, T> = {\n    dataGetter: node => node.data,\n    childrenGetter: d => d.children || undefined,\n    expandedGetter: d => !!d.expanded,\n  };\n\n  toPresentationNodes<N>(\n    nodes: N[],\n    customGetters?: NbGetters<N, T>,\n    level: number = NB_DEFAULT_ROW_LEVEL,\n  ): NbTreeGridPresentationNode<T>[] {\n    const getters: NbGetters<N, T> = { ...this.defaultGetters, ...customGetters };\n\n    return this.mapNodes(nodes, getters, level);\n  }\n\n  private mapNodes<N>(nodes: N[], getters: NbGetters<N, T>, level: number): NbTreeGridPresentationNode<T>[] {\n    const { dataGetter, childrenGetter, expandedGetter } = getters;\n\n    return nodes.map(node => {\n      const childrenNodes = childrenGetter(node);\n      let children: NbTreeGridPresentationNode<T>[];\n      if (childrenNodes) {\n        children = this.toPresentationNodes(childrenNodes, getters, level + 1);\n      }\n\n      return new NbTreeGridPresentationNode(dataGetter(node), children, expandedGetter(node), level);\n    });\n  }\n\n  flattenExpanded(nodes: NbTreeGridPresentationNode<T>[]): NbTreeGridPresentationNode<T>[] {\n    return nodes.reduce((res: NbTreeGridPresentationNode<T>[], node: NbTreeGridPresentationNode<T>) => {\n      res.push(node);\n\n      if (node.expanded && node.hasChildren()) {\n        res.push(...this.flattenExpanded(node.children));\n      }\n\n      return res;\n    }, []);\n  }\n\n  copy(nodes: NbTreeGridPresentationNode<T>[]): NbTreeGridPresentationNode<T>[] {\n    return nodes.map((node: NbTreeGridPresentationNode<T>) => {\n      let children: NbTreeGridPresentationNode<T>[];\n      if (node.hasChildren()) {\n        children = this.copy(node.children);\n      }\n      return new NbTreeGridPresentationNode(node.data, children, node.expanded, node.level);\n    });\n  }\n}\n"]}